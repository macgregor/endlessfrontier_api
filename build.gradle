plugins {
    id "java"
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id 'com.benjaminsproule.swagger' version '1.0.0'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    dropwizardVersion = '1.2.3'
    version = '0.0.1'
    group = 'com.macgregor'
    apiVersion = 'v1'
}

dependencies {
    compile (
            "io.dropwizard:dropwizard-core:${dropwizardVersion}",
            "com.smoketurner:dropwizard-swagger:1.2.3-3"
    )
    testCompile(
            'junit:junit:4.12',
            "io.dropwizard:dropwizard-testing:${dropwizardVersion}",
            "io.dropwizard:dropwizard-client:${dropwizardVersion}",
            "org.assertj:assertj-core:3.9.0"
    )

}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java.srcDirs = ['src/test/java']
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'com.macgregor.ef.RestJava'
    }
}

swagger {
    apiSource {
        springmvc = false
        locations = ['com.macgregor.ef.resource']
        schemes = ['https']
        host = 'endlessfrontier-api.herokuapp.com'
        swaggerDirectory = './docs/'
        basePath = '/'
        info {
            title = "${rootProject.name}"
            version = "${apiVersion}"
            contact {
                email = 'matthew.m.stratton@gmail.com'
                name = 'Matthew Stratton'
                url = 'https://github.com/macgregor/'
            }
            license {
                name='MIT'
                url='https://opensource.org/licenses/MIT'
            }
        }
    }
}

task generateDocs(type: Exec, dependsOn: generateSwaggerDocumentation) {
    executable "spectacle"
    args "-t", "docs/","docs/swagger.json"
}

task stage(dependsOn: ['build', 'clean']) {
    shadowJar
}
build.mustRunAfter clean